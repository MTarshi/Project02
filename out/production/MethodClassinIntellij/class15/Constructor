What is a constructor:
A constructor is a special block of code that helps us give initial
values to the field of a class. Initialization of object or instance.

Why we should use a Constructor:
1: When we use the constructor to initialize the object it looks more
readable and cleaner.
2: If the fields of a class are private its not possible to access them
outside of a class without constructor or a method which means we cant initialize them
without a method or a constructor.
3: We can enforce rules like what kind of values are assigned to variables
with the help of a constructor.
4: If we want to make sure that some lines of code should always be
executed when the object of a class is created we can put that code inside the constructor.

How to use Constructor:

We create constructor inside the class and when an object of that class
is created the constructor is executed automatically.

class Car{
String make;
String model;
Car(String carMake, String carModel){
make = carMake;
model = carModel;
}
public static void main(String[]args){
Car bmw = new Car("X6", "M4");
}
}

Rules:

1: Constructor dont have return types not even void.
2: The name of the contstructor should always be same as name of the class.
3: Constructors cant be created with a static keyword.
4: We can use any access modifiers with constructors.
5: If we dont create a constructor in a class a default constructor with zero
parameters is created by compiler(Compiler takes the codes written by us and it converts that code to byte code which
is easier for java to understand).
6: It is not allowed to have two constructors in a class with same number of parameters and same type.

This keyword:
We can use "this keyword" to access the instance variables when you have same
name variables in your method or constructor or any block of code.

this();
Calls the constructors of a class inside other constructors.
why we should use because it help us reuse already written constructor if they contain same code.
Why we want to create multiple constructors on the first place because we want to give end user flexibility
that he can create the objects of our class in many ways.


