OOPS: = Object Oriented Paradigm, is just a way of writing
a code a methodology a set of rules that we follow when we write code.
in this methodology we create classes and objects of those classes to
represent everything from real life.
Famouse paradigms:
--1: functional programming
--2: procedural programming

Four pillars of OOPS:
1: inheritance
2: polymorphism
3: abstraction
4: encapsulation

Some benefits of OOPS:
--1: Code re-usability
--2: Cleaner codes
--3: more flexibility
--4: less code.
--5: enforcing rules and hiding complexity and only focusing on the ideas.
--6: Secure code.

1: Inheritance:
 ->This is a mechanism in java through which a class can acquire the properties
 and methods of another classes.

Why should we use inheritance:
 ->If a piece of code is already present in a class instead of rewriting it
 or copying it. We can extend our class from that class, and we will get
 all the non-private methods and fields that class. It can save a lot of
 time. It also good for performance.

 Disadvantage of Inheritance:
  ->We get the unwanted code as well when we inherit from a class.
  ->Classes are tightly coupled which means if we change something in the parent
  class if affects all the child classes.

  How can we use inheritance:
  ->We use the extends keyword to inherit the classes.

  Rules:
  ->Inheritance is one way from parent to child only.
  ->In java, we cant inherit from multiple classes.
  ->Final classes cant be inherited. Classes which are decleared with FINAL keyword.
  ->Private members(fields and methods) are not inherited.
  ->Constructors are not inherited but we can call them using super().
  ->Child classes must provide a matching constructor.

  Types of inheritance:
  ->Single inheritance
  ->Multilevel inheritance
  ->Hierarchical inheritance
  ->Multiple inheritance (this one is not supported in JAVA)