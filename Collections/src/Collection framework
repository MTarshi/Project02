Collection framework:
->collection framework is a just a collection of interfaces and classes that have
many methods to store and manipulate real life day to day data.

Why we should learn collection framework:
->collection framework contains the classes that have pre-build methods to store
and manipulate the data. These methods are battle tested (very well tested, or
something we can use in production enviornment).

How can we use the collection frameword:
-> they are same classes just like any other class in java. We create the object
of the class and start calling the methods we just need to take care of the
diamond operator (<>). We put the name of the class inside the diamond operator
<> whose objects we will be storing inside these classes. For example for strings
and ArrayList the the syntax is: ArralyList<String> objName=new ArrayList<>();

What are wrapper classes:
->They are special classes build to work with collections framework which are
replica of primitive data types but they are classes means we can use them just
like any other class we can have methods.

Boxing and unboxing in wrapper classes:
->When we convert a primitive data type like int to a non primitive wrapper
class like integer we call it boxing. This conversion can happen automatically
and we can also call explicite methods to convert primitive to non-primitive.
in the case of auto its called auto boxing and in autoboxing we just assign the
data and it is converted automatically. While in simple we need to call a method
to convert it. Unboxing and autoboxing is simple the reverse of it.

Some downside not that down:
-> We need to use the wrapper classes with collection framework
-> Wrapper classes occupy 4 times more memory as compared to primitives. As a
tester we dont need to worry too much about these wrapper classes.
e.g normal int num   -> wrapper is integer num, it takes more memory.



